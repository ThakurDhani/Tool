# SPDX-License-Identifier: MIT-0
---

# ------------------ UBUNTU/DEBIAN TASKS ------------------
- name: Update apt repo and cache
  apt:
    update_cache: yes
    force_apt_get: yes
    cache_valid_time: 3600
  when: ansible_os_family == "Debian"

- name: Upgrade all packages on servers
  apt:
    upgrade: dist
    force_apt_get: yes
  when: ansible_os_family == "Debian"

- name: Install necessary packages on Debian/Ubuntu
  apt:
    name:
      - nginx
      - openjdk-17-jdk
      - vim
      - wget
    state: present
  when: ansible_os_family == "Debian"

- name: Import the Elasticsearch PGP key on Debian/Ubuntu
  apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    keyring: /usr/share/keyrings/elasticsearch-keyring.gpg
    state: present
  when: ansible_os_family == "Debian"

- name: Add the Elasticsearch repository on Debian/Ubuntu
  lineinfile:
    path: /etc/apt/sources.list.d/elastic-8.x.list
    line: "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main"
    create: yes
  when: ansible_os_family == "Debian"

- name: Install Elasticsearch & Kibana on Debian/Ubuntu
  apt:
    name:
      - "elasticsearch={{ elasticsearch_version }}"
      - "kibana={{ kibana_version }}"
    state: present
    update_cache: yes
    allow_downgrade: yes
  notify:
    - Start Elasticsearch
    - Enable Elasticsearch
    - Restart Elasticsearch
    - Start Kibana
    - Enable Kibana
    - Restart Kibana
  when: ansible_os_family == "Debian"

# ------------------ AMAZON LINUX TASKS ------------------
- name: Install dependencies on Amazon Linux
  yum:
    name:
      - java-11-amazon-corretto
      - nginx
      - wget
      - vim
    state: present
  when: ansible_distribution == "Amazon"

- name: Import the Elasticsearch GPG key on Amazon Linux
  rpm_key:
    key: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present
  when: ansible_distribution == "Amazon"

- name: Add Elasticsearch repo on Amazon Linux manually
  copy:
    dest: /etc/yum.repos.d/elasticsearch.repo
    content: |
      [elasticsearch]
      name=Elasticsearch repository for 8.x packages
      baseurl=https://artifacts.elastic.co/packages/8.x/yum
      gpgcheck=1
      gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
      enabled=1
      autorefresh=1
      type=rpm-md
  when: ansible_distribution == "Amazon"

- name: Install Elasticsearch & Kibana on Amazon Linux
  yum:
    name:
      - elasticsearch
      - kibana
    state: present
  notify:
    - Start Elasticsearch
    - Enable Elasticsearch
    - Restart Elasticsearch
    - Start Kibana
    - Enable Kibana
    - Restart Kibana
  when: ansible_distribution == "Amazon"

# ------------------ CONFIGURE elasticsearch.yml ------------------
- name: Configure elasticsearch.yml
  template:
    src: elasticsearch.yml.j2
    dest: /etc/elasticsearch/elasticsearch.yml
  notify: Restart Elasticsearch

# ------------------ CONFIGURE kibana.yml ------------------
- name: Configure kibana.yml
  block:
    - name: Ensure kibana.yml exists
      file:
        path: /etc/kibana/kibana.yml
        state: touch

    - name: Set Kibana server.host
      lineinfile:
        path: /etc/kibana/kibana.yml
        regexp: '^#?server.host:'
        line: 'server.host: "{{ kibana_server_host }}"'

    - name: Set Elasticsearch URL
      lineinfile:
        path: /etc/kibana/kibana.yml
        regexp: '^#?elasticsearch.hosts:'
        line: 'elasticsearch.hosts: ["https://{{ ansible_host }}:9200"]'

    - name: Set Elasticsearch service account token
      lineinfile:
        path: /etc/kibana/kibana.yml
        regexp: '^#?elasticsearch.serviceAccountToken:'
        line: 'elasticsearch.serviceAccountToken: "{{ kibana_service_token }}"'

    - name: Disable SSL verification for Elasticsearch
      lineinfile:
        path: /etc/kibana/kibana.yml
        regexp: '^#?elasticsearch.ssl.verificationMode:'
        line: 'elasticsearch.ssl.verificationMode: none'

    - name: Disable Kibana SSL
      lineinfile:
        path: /etc/kibana/kibana.yml
        regexp: '^#?server.ssl.enabled:'
        line: 'server.ssl.enabled: false'
  notify: Restart Kibana
