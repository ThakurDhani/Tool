---

# ------------------ DEBIAN FAMILY ------------------
- name: Update apt repo and cache
  apt:
    update_cache: yes
    force_apt_get: yes
    cache_valid_time: 3600
  when: ansible_os_family == "Debian"

- name: Upgrade all packages
  apt:
    upgrade: dist
    force_apt_get: yes
  when: ansible_os_family == "Debian"

- name: Install packages on Debian
  apt:
    name:
      - nginx
      - openjdk-17-jdk
      - vim
      - wget
    state: present
  when: ansible_os_family == "Debian"

- name: Import Elasticsearch PGP key (Debian)
  apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    keyring: /usr/share/keyrings/elasticsearch-keyring.gpg
    state: present
  when: ansible_os_family == "Debian"

- name: Add Elasticsearch repo (Debian)
  lineinfile:
    path: /etc/apt/sources.list.d/elastic-8.x.list
    line: "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main"
    create: yes
  when: ansible_os_family == "Debian"

- name: Install Elasticsearch (Debian)
  apt:
    name: elasticsearch
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"
  notify:
    - Enable Elasticsearch
    - Start Elasticsearch

- name: Configure elasticsearch.yml (Debian)
  block:
    - name: Set network.host
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        regexp: '^#?network.host:'
        line: 'network.host: 0.0.0.0'

    - name: Set http.port
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        regexp: '^#?http.port:'
        line: 'http.port: 9200'
  when: ansible_os_family == "Debian"
  notify: Restart Elasticsearch

# ------------------ REDHAT FAMILY ------------------
- name: Install packages on RedHat
  yum:
    name:
      - java-17-openjdk
      - nginx
      - wget
      - vim
    state: present
  when: ansible_os_family == "RedHat" and ansible_distribution != "Amazon"

- name: Import Elasticsearch GPG key (RedHat)
  rpm_key:
    key: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present
  when: ansible_os_family == "RedHat" and ansible_distribution != "Amazon"

- name: Add Elasticsearch repo (RedHat)
  get_url:
    url: https://artifacts.elastic.co/packages/8.x/yum/elasticsearch.repo
    dest: /etc/yum.repos.d/elasticsearch.repo
  when: ansible_os_family == "RedHat" and ansible_distribution != "Amazon"

- name: Install Elasticsearch (RedHat)
  yum:
    name: elasticsearch
    state: present
  when: ansible_os_family == "RedHat" and ansible_distribution != "Amazon"
  notify:
    - Enable Elasticsearch
    - Start Elasticsearch

- name: Configure elasticsearch.yml (RedHat)
  block:
    - name: Set network.host
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        regexp: '^#?network.host:'
        line: 'network.host: 0.0.0.0'

    - name: Set http.port
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        regexp: '^#?http.port:'
        line: 'http.port: 9200'
  when: ansible_os_family == "RedHat" and ansible_distribution != "Amazon"
  notify: Restart Elasticsearch

# ------------------ AMAZON LINUX ------------------
- name: Install packages on Amazon Linux
  yum:
    name:
      - java-11-amazon-corretto
      - nginx
      - wget
      - vim
    state: present
  when: ansible_distribution == "Amazon"

- name: Import Elasticsearch GPG key (Amazon)
  rpm_key:
    key: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present
  when: ansible_distribution == "Amazon"

- name: Add Elasticsearch repo (Amazon)
  copy:
    dest: /etc/yum.repos.d/elasticsearch.repo
    content: |
      [elasticsearch]
      name=Elasticsearch repository for 8.x packages
      baseurl=https://artifacts.elastic.co/packages/8.x/yum
      gpgcheck=1
      gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
      enabled=1
      autorefresh=1
      type=rpm-md
  when: ansible_distribution == "Amazon"

- name: Install Elasticsearch (Amazon)
  yum:
    name: elasticsearch
    state: present
  when: ansible_distribution == "Amazon"
  notify:
    - Enable Elasticsearch
    - Start Elasticsearch

- name: Configure elasticsearch.yml (Amazon)
  block:
    - name: Set network.host
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        regexp: '^#?network.host:'
        line: 'network.host: 0.0.0.0'

    - name: Set http.port
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        regexp: '^#?http.port:'
        line: 'http.port: 9200'
  when: ansible_distribution == "Amazon"
  notify: Restart Elasticsearch

# ------------------ SUSE FAMILY ------------------
- name: Install packages on SUSE
  zypper:
    name:
      - java-17-openjdk
      - nginx
      - wget
      - vim
    state: present
  when: ansible_os_family == "Suse"

- name: Import Elasticsearch GPG key (SUSE)
  rpm_key:
    key: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present
  when: ansible_os_family == "Suse"

- name: Add Elasticsearch repo (SUSE)
  get_url:
    url: https://artifacts.elastic.co/packages/8.x/yum/elasticsearch.repo
    dest: /etc/zypp/repos.d/elasticsearch.repo
  when: ansible_os_family == "Suse"

- name: Install Elasticsearch (SUSE)
  zypper:
    name: elasticsearch
    state: present
  when: ansible_os_family == "Suse"
  notify:
    - Enable Elasticsearch
    - Start Elasticsearch

- name: Configure elasticsearch.yml (SUSE)
  block:
    - name: Set network.host
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        regexp: '^#?network.host:'
        line: 'network.host: 0.0.0.0'

    - name: Set http.port
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        regexp: '^#?http.port:'
        line: 'http.port: 9200'
  when: ansible_os_family == "Suse"
  notify: Restart Elasticsearch

# ------------------ KIBANA ------------------
- name: Ensure Kibana config directory exists
  file:
    path: /etc/kibana
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Configure kibana.yml using template
  template:
    src: kibana.yml.j2
    dest: /etc/kibana/kibana.yml
    owner: root
    group: root
    mode: '0644'
  notify: Restart Kibana

- name: Enable and Start Kibana service
  systemd:
    name: "{{ kibana_service }}"
    enabled: yes
    state: started

- name: Wait for Kibana to be available
  uri:
    url: http://localhost:5601/status
    status_code: 200
    timeout: 30
    validate_certs: no
  register: kibana_status
  retries: 5
  delay: 5
  until: kibana_status.status == 200
